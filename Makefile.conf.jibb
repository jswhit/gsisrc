# This config file contains the compile options for compilation
# of the GSI code on the NCEP IBM SP.  All production builds
# on NCEP IBM SP are 64-bit

# ----------------------------------
# Redefine variables for NCEP IBM SP
# ----------------------------------
CORE = /nwprod
CORELIB = /nwprod/lib
COREINC  = $(CORELIB)/incmod
INCsfcio = $(COREINC)/sfcio_4
INCsigio = $(COREINC)/sigio_4
INCgfsio = $(COREINC)/gfsio_4
INCnemsio = $(COREINC)/nemsio
CRTMpath = /usr/local/jcsda/tools/CRTM/REL-2.0.4-p1
##INCcrtm  = $(COREINC)/crtm_gfsgsi

# The below definitions of INCcrtm and LIBcrtm are ONLY
# for pre-implementation compiles.   
#
# When the new global_gsi code is implemented, first implement
# crtm_gfsgsi update.   Next, remove the INCcrtm and LIBcrtm lines
# below.   Uncomment the INCcrtm line above.   Also replace
# "$(LIBcrtm)" on LIBS_N line with "-lcrtm_gfsgsi"

##INCcrtm = /global/save/wx20rt/2jif/Q1FY10_DA/lib/incmod/crtm_gfsgsi
##LIBcrtm = /global/save/wx20rt/2jif/Q1FY10_DA/lib/libcrtm_gfsgsi.a
#INCcrtm = $(COREINC)/crtm_2.0.2
#LIBcrtm = $(CORELIB)/libcrtm_2.0.2.a

INCcrtm = $(CRTMpath)/include
LIBcrtm = $(CRTMpath)/lib/libCRTM.a

WRFPATH=$(CORE)/sorc/nam_nmm_real_fcst.fd

LIBwrfio_int    = $(WRFPATH)/external/io_int/libwrfio_int.a
LIBwrfio_netcdf = $(WRFPATH)/external/io_netcdf/libwrfio_nf.a
INCnetcdf	= $(COREINC)/netcdf
OBJwrf_frame_pk = $(WRFPATH)/frame/pack_utils.o
OBJwrf_sizeof_int = $(WRFPATH)/frame/module_machine.o
WRFLIB = $(LIBwrfio_int) $(LIBwrfio_netcdf) $(OBJwrf_frame_pk) $(OBJwrf_sizeof_int)

#WRFLIB = $(LIBwrfio_int)  $(LIBwrfio_netcdf) $(OBJwrf_frame_pk)


# Empty out definition of libs use by GMAO GSI building structure
LIBtransf = #-L$(CORELIB) -ltransf
LIBhermes = #-L$(CORELIB) -lhermes
LIBgfio   = #-L$(CORELIB) -lgfio
  AR     = ar -v -q
LIBhdf    = #-L$(BASEDIR)/$(ARCH)/lib  -lmfhdf -ldf -lhdfjpeg -lhdfz -lsz

# ---------------------------
# General targets/definitions
# ---------------------------

  AR     = ar -X64 -v -q

# ----------------------------
# Fortran compiler and options
# ----------------------------

  CF            = mpif90
  FC            = $(CF)

#--- Normal mode options

  PROF= #-g -pg -qfullpath
  #OMP =  -openmp

  FFLAGS_F90    =  -O3  -fp-model strict  -assume byterecl  -convert big_endian  -free  #-openmp

  FFLAGS_NOB    =  -O3  -fp-model strict  -assume byterecl  -free  #-openmp
  FFLAGS_COM_N  = -I ./ -I $(INCcrtm) -I $(INCsfcio) -I $(INCsigio) -I $(INCgfsio) -I $(INCnetcdf) \
		 -I $(INCnemsio) -DWRF -D_REAL8_ #-openmp

  FFLAGS_N  = $(FFLAGS_F90) $(FFLAGS_COM_N) $(PROF)
  FFLAGS_f  = $(FFLAGS_COM_N) $(PROF)
  FFLAGS    = $(FFLAGS_N) $(PROF)
  #FFLAGS_e  = $(FFLAGS_NOB) $(FFLAGS_COM_N) $(PROF)
  #FFLAGS_e  = $(FFLAGS_N)
  #FFLAGS_NOSWAP_N  = $(FFLAGS_NOB) -I ./ -I $(INCcrtm) -I $(INCsfcio) -I $(INCsigio) \
                 	-I $(INCgfsio) -I $(INCnemsio) -I $(INCnetcdf)

  FFLAGS_NOSWAP_N  =  -O3 -fp-model strict -I ./ -I $(INCcrtm) -I $(INCsfcio) -I $(INCsigio) \
                 	-I $(INCgfsio) -I $(INCnemsio) -I $(INCnetcdf)
#--- Debug mode options
#  -qflttrap=overflow:zero:enable \ is ok
#          -qflttrap=overflow:zero:underflow:enable \ fails
  FFLAGS_COM_D  =  -I ./ -I $(INCcrtm) -I $(INCsfcio) -I $(INCsigio) \
          -I $(INCgfsio) -I $(INCnetcdf) -qarch=auto \
          -qmaxmem=-1 -qfullpath -qdbg -qstrict -q64 \
          -O0 \
          -qsigtrap=xl__trcedump \
          -qflttrap=overflow:zero:enable \
          -qinitauto=7FF7FFFF \
          -qcheck \
          -qwarn64 \
          -qflag=i:u \
          -qsave=all \
          -qlistopt \
          -qsource

  FFLAGS_D  = $(FFLAGS_F90) $(FFLAGS_COM_D)



# ----------------------
# C Compiler and options
# ----------------------

 # CC            = gcc
   CC		 = icc
#--- Normal mode options

  CFLAGS_N      = -I. -DFortranByte=char -DFortranInt=int -DFortranLlong='long long'  -O3  -Dfunder

#--- Debug mode options

  CFLAGS_D      = -I ./ -DFortranByte=char -DFortranInt=int -DFortranLlong='long long' -g


# ------------------
# Linker and options
# ------------------

  LD            = $(CF)

#--- Normal mode options

  LIBS_N        = $(WRFLIB) -L$(CORELIB) -lsp_d -lw3_d -lnemsio -lbufr_d_64 -lgfsio_4 -lsigio_4 -lsfcio_4 -L$(LIBcrtm) \
                  -lnetcdf -lw3_d -lgfsio_4 -lbacio_4 -lcrtm_2.0.2 -lmkl_intel_lp64 -lmkl_sequential -lmkl_core

  LDFLAGS_N       = $(FFLAGS_F90) $(FFLAGS_COM_N)

  LDFLAGS       = $(LDFLAGS_N)

#--- Debug mode options

  LIBS_D        = $(LIBS_N) -lhmd

  LDFLAGS_D     = -lessl_r -lmass -bloadmap:loadmap.txt \
                  -bdatapsize:64K -bstackpsize:64K $(OMP)

#--- Empty out mpi library definition: embedded in compiler

  LIBmpi	= 
