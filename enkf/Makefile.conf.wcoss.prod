# This config file contains the compile options for compilation
# of the EnKF code on the NOAA HPCS.

# ----------------------------------
# Redefine variables for WCOSS
# ----------------------------------

# Set library versions
WRF_SHARED_VER = v1.1.0

NETCDFPATH = $(NETCDF)
NETCDF_INCLUDE = $(NETCDFPATH)/include
NETCDF_LDFLAGS_F = -L$(NETCDFPATH)/lib -lnetcdf

# WRF locations
WRFPATH = /nwprod/sorc/wrf_shared.$(WRF_SHARED_VER)
LIBwrfio_int    = $(WRFPATH)/external/io_int/libwrfio_int.a
LIBwrfio_netcdf = $(WRFPATH)/external/io_netcdf/libwrfio_nf.a
OBJwrf_frame_pk = $(WRFPATH)/frame/pack_utils.o
OBJwrf_sizeof_int = $(WRFPATH)/frame/module_machine.o
WRFLIB = $(LIBwrfio_int) $(LIBwrfio_netcdf) $(OBJwrf_frame_pk) $(OBJwrf_sizeof_int)


# Empty out definition of libs use by GMAO EnKF building structure
LIBtransf = #-L$(CORELIB) -ltransf
LIBhermes = #-L$(CORELIB) -lhermes
LIBgfio   = #-L$(CORELIB) -lgfio
INChdf    = #-I$(BASEDIR)/$(ARCH)/include/hdf
LIBhdf    = #-L$(BASEDIR)/$(ARCH)/lib  -lmfhdf -ldf -lhdfjpeg -lhdfz -lsz

# ---------------------------
# General targets/definitions
# ---------------------------

  AR     = ar -rv

# ----------------------------
# Fortran compiler and options
# ----------------------------

  CF            = $(COMP_MP)
  FC            = $(CF)

#--- Normal mode options
  PROF= #-pg
  OMP = -openmp

  FFLAGS_F90    = -DGFS
  EXE_FILE = global_enkf
  #FFLAGS_F90    = -DWRF
  #EXE_FILE = wrf_enkf
  #FFLAGS_F90    = -DNMMB
  #EXE_FILE = nmmb_enkf

  FFLAGS_COM_N  = -I ./ -I ../ -I $(SFCIO_INC4) -I $(SIGIO_INC4) -I $(NEMSIO_INC) \
  		-I $(NETCDF_INCLUDE) \
		-O3 -fp-model source -convert big_endian -assume byterecl \
		-implicitnone $(OMP)

  FFLAGS_COM_N_NOSWAP  = -I ./ -I ../ -I $(SFCIO_INC4) -I $(SIGIO_INC4) -I $(NEMSIO_INC)-I \
  		       $(NETCDF_INCLUDE) \
		       -O3 -fp-model source -convert big_endian -assume byterecl \
		       -implicitnone $(OMP)

  FFLAGS_N  = $(FFLAGS_F90) $(FFLAGS_COM_N) $(PROF)
  FFLAGS_NOSWAP_N  = $(FFLAGS_F90) $(FFLAGS_COM_N_NOSWAP) $(PROF)
  FFLAGS_f  = $(FFLAGS_COM_N) $(PROF)
  FFLAGS    = $(FFLAGS_N) $(PROF)


#--- Debug mode options
  FFLAGS_COM_D  =  -I ./ -I ../ -I $(SFCIO_INC4) -I $(SIGIO_INC4) -I $(NEMSIO_INC) \
  		-I $(NETCDF_INCLUDE) \
		-O0 -fp-model source -convert big_endian -assume byterecl \
		-implicitnone -warn all -g -traceback -debug all -check all
  FFLAGS_COM_NOSWAP_D  =  -I ./ -I ../ -I $(SFCIO_INC4) -I $(SIGIO_INC4) -I $(NEMSIO_INC) \
  		       -I $(NETCDF_INCLUDE) \
  		       -O0 -fp-model source -convert big_endian -assume byterecl \
		       -implicitnone -warn all -g -traceback -debug all -check all
  FFLAGS_D  = $(FFLAGS_F90) $(FFLAGS_COM_D)
  FFLAGS_NOSWAP_D = $(FFLAGS_F90) $(FFLAGS_COM_NOSWAP_D)



# ----------------------
# C Compiler and options
# ----------------------

  CC            = $(C_COMP_MP)

#--- Normal mode options

  CFLAGS_N      = -DLINUX -Dfunder -I ./ -DFortranByte=char -DFortranInt=int -DFortranLlong='long long' -O3 $(OMP)

#--- Debug mode options

  CFLAGS_D      = -DLINUX -Dfunder -I ./ -DFortranByte=char -DFortranInt=int -DFortranLlong='long long' -g


# ------------------
# Linker and options
# ------------------

  LD            = $(CF)

#--- Normal mode options

  LIBS_N        = $(SP_LIBd) $(NEMSIO_LIB) $(BACIO_LIB4) $(W3NCO_LIBd) \
  		  $(W3EMC_LIBd) $(SIGIO_LIB4) $(SFCIO_LIB4) $(CRTM_LIB) \
		  $(BUFR_LIBd) $(WRFLIB) $(NETCDF_LDFLAGS_F)

  LDFLAGS_N     = -mkl -Wl,-Map,loadmap.txt $(OMP)

  LDFLAGS       = $(LDFLAGS_N)

#--- Debug mode options

  LIBS_D        = $(LIBS_N)

  LDFLAGS_D     = -mkl -Wl,-Map,loadmap.txt

#--- Empty out mpi library definition: embedded in compiler

  LIBmpi	=
