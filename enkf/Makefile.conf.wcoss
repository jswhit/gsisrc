# This config file contains the compile options for compilation
# of the EnKF code on the NOAA HPCS.

# ----------------------------------
# Set library versions
# ----------------------------------

NETCDF_VERSION = 3.6.3
SFCIO_VERSION = 1.0.0
SIGIO_VERSION = 1.0.1
SP_VERSION = 2.0.1
W3EMC_VERSION = 2.0.5
W3NCO_VERSION = 2.0.6
NEMSIO_VERSION = 2.2.1
BACIO_VERSION = 2.0.1
BUFR_VERSION = 10.2.5
CRTM_VERSION = 2.1.3

COREINC  = /nwprod/lib/incmod
CORELIB  = /nwprod/lib
INCsfcio = $(COREINC)/sfcio_v$(SFCIO_VERSION)_4
INCsigio = $(COREINC)/sigio_v$(SIGIO_VERSION)_4
INCnemsio = $(COREINC)/nemsio_v$(NEMSIO_VERSION)

NETCDFPATH = /usrx/local/NetCDF/$(NETCDF_VERSION)
INCnetcdf  = $(NETCDFPATH)/include

# Empty out definition of libs use by GMAO EnKF building structure
LIBtransf = #-L$(CORELIB) -ltransf
LIBhermes = #-L$(CORELIB) -lhermes
LIBgfio   = #-L$(CORELIB) -lgfio
INChdf    = #-I$(BASEDIR)/$(ARCH)/include/hdf
LIBhdf    = #-L$(BASEDIR)/$(ARCH)/lib  -lmfhdf -ldf -lhdfjpeg -lhdfz -lsz
# 
# WRF locations
WRFPATH = /nwprod/sorc/wrf_shared.fd
LIBwrfio_int    = $(WRFPATH)/external/io_int/libwrfio_int.a
LIBwrfio_netcdf = $(WRFPATH)/external/io_netcdf/libwrfio_nf.a
OBJwrf_frame_pk = $(WRFPATH)/frame/pack_utils.o
OBJwrf_sizeof_int = $(WRFPATH)/frame/module_machine.o
WRFLIB = $(LIBwrfio_int) $(LIBwrfio_netcdf) $(OBJwrf_frame_pk) $(OBJwrf_sizeof_int)
GSILIBS   = -L$(CORELIB) -lw3emc_v$(W3EMC_VERSION)_d -lbufr_v$(BUFR_VERSION)_d_64 -lcrtm_v$(CRTM_VERSION) $(WRFLIB)

# ---------------------------
# General targets/definitions
# ---------------------------

  AR     = ar -v

# ----------------------------
# Fortran compiler and options
# ----------------------------

  CF            = mpfort
  FC            = $(CF)

#--- Normal mode options
  PROF= #-pg
  OMP = -openmp

  FFLAGS_F90    = -DGFS

  FFLAGS_COM_N  = -I ./ -I ../ -I $(INCsfcio) -I $(INCsigio) -I $(INCnetcdf) -I $(INCnemsio) \
		-O3 -fp-model strict -convert big_endian -assume byterecl \
		-implicitnone $(OMP)

  FFLAGS_COM_N_NOSWAP  = -I ./ -I ../ -I $(INCsfcio) -I $(INCsigio) -I $(INCnetcdf) -I $(INCnemsio)\
		-O3 -fp-model strict -convert big_endian -assume byterecl \
		-implicitnone $(OMP)

  FFLAGS_N  = $(FFLAGS_F90) $(FFLAGS_COM_N) $(PROF)
  FFLAGS_NOSWAP_N  = $(FFLAGS_F90) $(FFLAGS_COM_N_NOSWAP) $(PROF)
  FFLAGS_f  = $(FFLAGS_COM_N) $(PROF)
  FFLAGS    = $(FFLAGS_N) $(PROF)


#--- Debug mode options
  FFLAGS_COM_D  =  -I ./ -I ../ -I $(INCsfcio) -I $(INCsigio) -I $(INCnetcdf) -I $(INCnemsio)\
		-O0 -fp-model strict -convert big_endian -assume byterecl \
		-implicitnone -warn all -g -traceback -debug all -check all
  FFLAGS_COM_NOSWAP_D  =  -I ./ -I ../ -I $(INCsfcio) -I $(INCsigio) -I $(INCnetcdf) -I $(INCnemsio)\
  		       -O0 -fp-model strict -convert big_endian -assume byterecl \
		       -implicitnone -warn all -g -traceback -debug all -check all
  FFLAGS_D  = $(FFLAGS_F90) $(FFLAGS_COM_D)
  FFLAGS_NOSWAP_D = $(FFLAGS_F90) $(FFLAGS_COM_NOSWAP_D)



# ----------------------
# C Compiler and options
# ----------------------

  CC            = mpcc

#--- Normal mode options

  CFLAGS_N      = -DLINUX -Dfunder -I ./ -DFortranByte=char -DFortranInt=int -DFortranLlong='long long' -O3 $(OMP)

#--- Debug mode options

  CFLAGS_D      = -DLINUX -Dfunder -I ./ -DFortranByte=char -DFortranInt=int -DFortranLlong='long long' -g


# ------------------
# Linker and options
# ------------------

  LD            = $(CF)

#--- Normal mode options

  LIBS_N        = -L$(CORELIB) -lsp_v$(SP_VERSION)_d -lnemsio_v$(NEMSIO_VERSION) -lbacio_v$(BACIO_VERSION)_4 \
  		-lw3nco_v$(W3NCO_VERSION)_d -lsigio_v$(SIGIO_VERSION)_4 -lsfcio_v$(SFCIO_VERSION)_4 \
  		$(GSILIBS) -L$(NETCDFPATH)/lib -lnetcdf


  LDFLAGS_N     = -mkl -Wl,-Map,loadmap.txt $(OMP)

  LDFLAGS       = $(LDFLAGS_N)

#--- Debug mode options

  LIBS_D        = $(LIBS_N)

  LDFLAGS_D     = -mkl -Wl,-Map,loadmap.txt

#--- Empty out mpi library definition: embedded in compiler

  LIBmpi	=
